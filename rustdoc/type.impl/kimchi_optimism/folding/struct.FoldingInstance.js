(function() {var type_impls = {
"kimchi_optimism":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Instance%3CG%3E-for-FoldingInstance%3CN,+G%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi_optimism/folding.rs.html#56-70\">source</a><a href=\"#impl-Instance%3CG%3E-for-FoldingInstance%3CN,+G%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, G: CommitmentCurve&gt; Instance&lt;G&gt; for <a class=\"struct\" href=\"kimchi_optimism/folding/struct.FoldingInstance.html\" title=\"struct kimchi_optimism::folding::FoldingInstance\">FoldingInstance</a>&lt;N, G&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.combine\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi_optimism/folding.rs.html#57-65\">source</a><a href=\"#method.combine\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">combine</a>(a: Self, b: Self, challenge: G::ScalarField) -&gt; Self</h4></section></summary><div class='docblock'>Combine two instances ‘a’ and ‘b’ into a new instance.\nSee page 15.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.alphas\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi_optimism/folding.rs.html#67-69\">source</a><a href=\"#method.alphas\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">alphas</a>(&amp;self) -&gt; &amp;Alphas&lt;G::ScalarField&gt;</h4></section></summary><div class='docblock'>Returns the alphas values for the instance</div></details><section id=\"method.relax\" class=\"method trait-impl\"><a href=\"#method.relax\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">relax</a>(self, zero_commit: PolyComm&lt;G&gt;) -&gt; RelaxedInstance&lt;G, Self&gt;</h4></section></div></details>","Instance<G>","kimchi_optimism::keccak::folding::KeccakFoldingInstance","kimchi_optimism::mips::folding::MIPSFoldingInstance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CChallenge%3E-for-FoldingInstance%3CN,+G%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi_optimism/folding.rs.html#72-82\">source</a><a href=\"#impl-Index%3CChallenge%3E-for-FoldingInstance%3CN,+G%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, G: CommitmentCurve&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"enum\" href=\"kimchi_optimism/folding/enum.Challenge.html\" title=\"enum kimchi_optimism::folding::Challenge\">Challenge</a>&gt; for <a class=\"struct\" href=\"kimchi_optimism/folding/struct.FoldingInstance.html\" title=\"struct kimchi_optimism::folding::FoldingInstance\">FoldingInstance</a>&lt;N, G&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;G as AffineCurve&gt;::ScalarField</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi_optimism/folding.rs.html#75-81\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: <a class=\"enum\" href=\"kimchi_optimism/folding/enum.Challenge.html\" title=\"enum kimchi_optimism::folding::Challenge\">Challenge</a>) -&gt; &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<Challenge>","kimchi_optimism::keccak::folding::KeccakFoldingInstance","kimchi_optimism::mips::folding::MIPSFoldingInstance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-FoldingInstance%3CN,+G%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi_optimism/folding.rs.html#42\">source</a><a href=\"#impl-Debug-for-FoldingInstance%3CN,+G%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, G: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + CommitmentCurve&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"kimchi_optimism/folding/struct.FoldingInstance.html\" title=\"struct kimchi_optimism::folding::FoldingInstance\">FoldingInstance</a>&lt;N, G&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi_optimism/folding.rs.html#42\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","kimchi_optimism::keccak::folding::KeccakFoldingInstance","kimchi_optimism::mips::folding::MIPSFoldingInstance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-FoldingInstance%3CN,+G%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi_optimism/folding.rs.html#42\">source</a><a href=\"#impl-Clone-for-FoldingInstance%3CN,+G%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, G: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + CommitmentCurve&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"kimchi_optimism/folding/struct.FoldingInstance.html\" title=\"struct kimchi_optimism::folding::FoldingInstance\">FoldingInstance</a>&lt;N, G&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi_optimism/folding.rs.html#42\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"kimchi_optimism/folding/struct.FoldingInstance.html\" title=\"struct kimchi_optimism::folding::FoldingInstance\">FoldingInstance</a>&lt;N, G&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","kimchi_optimism::keccak::folding::KeccakFoldingInstance","kimchi_optimism::mips::folding::MIPSFoldingInstance"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()