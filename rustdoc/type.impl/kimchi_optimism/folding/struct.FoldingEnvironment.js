(function() {var type_impls = {
"kimchi_optimism":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FoldingEnv%3C%3C%3CC+as+FoldingConfig%3E::Curve+as+AffineCurve%3E::ScalarField,+FoldingInstance%3CN,+%3CC+as+FoldingConfig%3E::Curve%3E,+FoldingWitness%3CN,+%3C%3CC+as+FoldingConfig%3E::Curve+as+AffineCurve%3E::ScalarField%3E,+%3CC+as+FoldingConfig%3E::Column,+Challenge,+%3CC+as+FoldingConfig%3E::Selector%3E-for-FoldingEnvironment%3CN,+N_REL,+N_SEL,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi_optimism/folding.rs.html#124-199\">source</a><a href=\"#impl-FoldingEnv%3C%3C%3CC+as+FoldingConfig%3E::Curve+as+AffineCurve%3E::ScalarField,+FoldingInstance%3CN,+%3CC+as+FoldingConfig%3E::Curve%3E,+FoldingWitness%3CN,+%3C%3CC+as+FoldingConfig%3E::Curve+as+AffineCurve%3E::ScalarField%3E,+%3CC+as+FoldingConfig%3E::Column,+Challenge,+%3CC+as+FoldingConfig%3E::Selector%3E-for-FoldingEnvironment%3CN,+N_REL,+N_SEL,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const N_REL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const N_SEL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, C: FoldingConfig&gt; FoldingEnv&lt;&lt;&lt;C as FoldingConfig&gt;::Curve as AffineCurve&gt;::ScalarField, <a class=\"struct\" href=\"kimchi_optimism/folding/struct.FoldingInstance.html\" title=\"struct kimchi_optimism::folding::FoldingInstance\">FoldingInstance</a>&lt;N, &lt;C as FoldingConfig&gt;::Curve&gt;, <a class=\"struct\" href=\"kimchi_optimism/folding/struct.FoldingWitness.html\" title=\"struct kimchi_optimism::folding::FoldingWitness\">FoldingWitness</a>&lt;N, &lt;&lt;C as FoldingConfig&gt;::Curve as AffineCurve&gt;::ScalarField&gt;, &lt;C as FoldingConfig&gt;::Column, <a class=\"enum\" href=\"kimchi_optimism/folding/enum.Challenge.html\" title=\"enum kimchi_optimism::folding::Challenge\">Challenge</a>, &lt;C as FoldingConfig&gt;::Selector&gt; for <a class=\"struct\" href=\"kimchi_optimism/folding/struct.FoldingEnvironment.html\" title=\"struct kimchi_optimism::folding::FoldingEnvironment\">FoldingEnvironment</a>&lt;N, N_REL, N_SEL, C&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"kimchi_optimism/folding/struct.FoldingWitness.html\" title=\"struct kimchi_optimism::folding::FoldingWitness\">FoldingWitness</a>&lt;N, &lt;&lt;C as FoldingConfig&gt;::Curve as AffineCurve&gt;::ScalarField&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;C::Column, Output = Evaluations&lt;&lt;&lt;C as FoldingConfig&gt;::Curve as AffineCurve&gt;::ScalarField, Radix2EvaluationDomain&lt;&lt;&lt;C as FoldingConfig&gt;::Curve as AffineCurve&gt;::ScalarField&gt;&gt;&gt;,\n    <a class=\"struct\" href=\"kimchi_optimism/folding/struct.FoldingWitness.html\" title=\"struct kimchi_optimism::folding::FoldingWitness\">FoldingWitness</a>&lt;N, &lt;&lt;C as FoldingConfig&gt;::Curve as AffineCurve&gt;::ScalarField&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;C::Selector, Output = Evaluations&lt;&lt;&lt;C as FoldingConfig&gt;::Curve as AffineCurve&gt;::ScalarField, Radix2EvaluationDomain&lt;&lt;&lt;C as FoldingConfig&gt;::Curve as AffineCurve&gt;::ScalarField&gt;&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Structure\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Structure\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Structure</a> = <a class=\"struct\" href=\"kimchi_optimism/trace/struct.Trace.html\" title=\"struct kimchi_optimism::trace::Trace\">Trace</a>&lt;N, N_REL, N_SEL, C&gt;</h4></section></summary><div class='docblock'>Structure which could be storing useful information like selectors, etc.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi_optimism/folding.rs.html#145-163\">source</a><a href=\"#method.new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new</a>(\n    structure: &amp;Self::Structure,\n    instances: [&amp;<a class=\"struct\" href=\"kimchi_optimism/folding/struct.FoldingInstance.html\" title=\"struct kimchi_optimism::folding::FoldingInstance\">FoldingInstance</a>&lt;N, C::Curve&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">2</a>],\n    witnesses: [&amp;<a class=\"struct\" href=\"kimchi_optimism/folding/struct.FoldingWitness.html\" title=\"struct kimchi_optimism::folding::FoldingWitness\">FoldingWitness</a>&lt;N, &lt;&lt;C as FoldingConfig&gt;::Curve as AffineCurve&gt;::ScalarField&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">2</a>]\n) -&gt; Self</h4></section></summary><div class='docblock'>Creates a new environment storing the structure, instances and witnesses.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.domain_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi_optimism/folding.rs.html#165-167\">source</a><a href=\"#method.domain_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">domain_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the domain size of the circuit.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero_vec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi_optimism/folding.rs.html#169-171\">source</a><a href=\"#method.zero_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero_vec</a>(\n    &amp;self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;&lt;C as FoldingConfig&gt;::Curve as AffineCurve&gt;::ScalarField&gt;</h4></section></summary><div class='docblock'>Returns a vector of zeros with the same length as the number of rows in\nthe circuit.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.col\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi_optimism/folding.rs.html#173-180\">source</a><a href=\"#method.col\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">col</a>(\n    &amp;self,\n    col: C::Column,\n    curr_or_next: CurrOrNext,\n    side: Side\n) -&gt; &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;&lt;C as FoldingConfig&gt;::Curve as AffineCurve&gt;::ScalarField&gt;</h4></section></summary><div class='docblock'>Returns the evaluations of a given column witness at omega or zeta*omega.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.challenge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi_optimism/folding.rs.html#182-188\">source</a><a href=\"#method.challenge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">challenge</a>(\n    &amp;self,\n    challenge: <a class=\"enum\" href=\"kimchi_optimism/folding/enum.Challenge.html\" title=\"enum kimchi_optimism::folding::Challenge\">Challenge</a>,\n    side: Side\n) -&gt; &lt;&lt;C as FoldingConfig&gt;::Curve as AffineCurve&gt;::ScalarField</h4></section></summary><div class='docblock'>Obtains a given challenge from the expanded instance for one side.\nThe challenges are stored inside the instances structs.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.alpha\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi_optimism/folding.rs.html#190-193\">source</a><a href=\"#method.alpha\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">alpha</a>(\n    &amp;self,\n    i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    side: Side\n) -&gt; &lt;&lt;C as FoldingConfig&gt;::Curve as AffineCurve&gt;::ScalarField</h4></section></summary><div class='docblock'>Computes the i-th power of alpha for a given side.\nFolding itself will provide us with the alpha value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.selector\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi_optimism/folding.rs.html#195-198\">source</a><a href=\"#method.selector\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">selector</a>(\n    &amp;self,\n    s: &amp;C::Selector,\n    side: Side\n) -&gt; &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;&lt;C as FoldingConfig&gt;::Curve as AffineCurve&gt;::ScalarField&gt;</h4></section></summary><div class='docblock'>similar to [Self::col], but folding may ask for a dynamic selector directly\ninstead of just column that happens to be a selector</div></details></div></details>","FoldingEnv<<<C as FoldingConfig>::Curve as AffineCurve>::ScalarField, FoldingInstance<N, <C as FoldingConfig>::Curve>, FoldingWitness<N, <<C as FoldingConfig>::Curve as AffineCurve>::ScalarField>, <C as FoldingConfig>::Column, Challenge, <C as FoldingConfig>::Selector>","kimchi_optimism::keccak::folding::KeccakFoldingEnvironment","kimchi_optimism::mips::folding::MIPSFoldingEnvironment"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()