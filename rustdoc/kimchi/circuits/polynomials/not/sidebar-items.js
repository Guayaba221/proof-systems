window.SIDEBAR_ITEMS = {"fn":[["create_not_witness_checked_length","Create a Not witness for less than 255 bits (native field) starting at row 0 Input: first input and optional bit length If `bits` is not provided, the negation is performed using the length of the `input` in bits. If `bits` is provided, the negation takes the maximum length between `bits` and that of `input`."],["create_not_witness_unchecked_length","Creates as many negations as the number of inputs. The inputs must fit in the native field. We start at the row 0 using generic gates to perform the negations. Input: a vector of words to be negated, and the number of bits (all the same) Panics if the bits length is too small for the inputs"],["extend_not_witness_checked_length","Extend a NOT witness for less than 255 bits (native field) Input: full witness, first input and optional bit length If `bits` is not provided, the negation is performed using the length of the `input` in bits. If `bits` is provided, the negation takes the maximum length between `bits` and that of `input`. INTEGRATION: set a row of the witness with public input `2^bits - 1` and wire to the second input of the first Xor gate."],["extend_not_witness_unchecked_length","Extends negation witnesses from generic gate, assuming the input witness already contains public input rows holding the 2^bits-1 value. Input: a vector of words to be negated, and the number of bits (all the same) Panics if the bits length is too small for the inputs INTEGRATION: Set public input of bits in public generic gate NOTE: `witness[0][pub] = 2^bits - 1`"]]};