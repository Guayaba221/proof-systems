[{"id":0,"href":"/docs/specifications/","title":"Specifications","section":"Docs","content":"Introduction #  Specifications #  In this section, we have specifications\n  Kimchi  This document specifies the kimchi variant of PLONK.   Kimchi Polynomial Commitment  This document specifies the kimchi polynomial commitment.   "},{"id":1,"href":"/docs/specifications/kimchi/","title":"Kimchi","section":"Specifications","content":"Kimchi #  This document specifies the kimchi variant of PLONK.\nOverview #  The document follows the following structure:\nTODO: simply create a ToC no?\n Setup. A one-time setup for the proof system. Per-circuit setup. A one-time setup for each circuit that are used in the proof system. Proof creation. How to create a proof. Proof verification. How to verify a proof.  Dependencies #  Polynomial Commitments #  Refer to the specification on polynomial commitments. We make use of the following functions from that specification:\n PolyCom.non_hiding_commit(poly) -\u0026gt; PolyCom::NonHidingCommitment PolyCom.commit(poly) -\u0026gt; PolyCom::HidingCommitment PolyCom.evaluation_proof(poly, commitment, point) -\u0026gt; EvaluationProof PolyCom.verify(commitment, point, evaluation, evaluation_proof) -\u0026gt; bool  Poseidon hash function #  Refer to the specification on Poseidon. We make use of the following functions from that specification:\n Poseidon.init(params) -\u0026gt; FqSponge Poseidon.update(field_elem) Poseidon.finalize() -\u0026gt; FieldElem  specify the following functions on top:\n Poseidon.produce_challenge() (TODO: uses the endomorphism) Poseidon.to_fr_sponge() -\u0026gt; state_of_fq_sponge_before_eval, FrSponge  Pasta #  Kimchi is made to work on cycles of curves, so the protocol switch between two fields Fq and Fr, where Fq represents the base field and Fr represents the scalar field.\nConstraints #  Permutation #  Lookup #  Gates #  Generic Gate #  Poseidon #  chacha #  complete_add #  endomul_scalar #  endosclmul #  poseidon #  varbasemul #  constraint system creation (circuit creation) #  prover and verifier index creation #  proof data structure #  TKTK\nproof creation #  proof verification #  "},{"id":2,"href":"/docs/specifications/poly-commitment/","title":"Kimchi Polynomial Commitment","section":"Specifications","content":"Kimchi Polynomial Commitment #  TKTK\n"}]